apiVersion: apps/v1
kind: Deployment
metadata:
  name: producer-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: producer
  template:
    metadata:
      labels:
        app: producer
    spec:
      containers:
        - name: producer
          image: vivekguptalandmarkgroupin/kafka:producer-image-latest
          ports:
            - containerPort: 9991
          env:
            - name: SERVER_PORT # this could be avoided as same is anyway present in producer config
              value: "9991"
            - name: SPRING_CLOUD_STREAM_BINDINGS_BACKPRESSUREOUTPUT_DESTINATION # this could be avoided as same is anyway present in producer config
              value: "backpressure"
            - name: SPRING_CLOUD_STREAM_BINDINGS_BACKPRESSUREOUTPUT_PRODUCER_PARTITIONKEYEXPRESSION # this is to make sure producer produces messages  in  round-robin way explicitly using partition key
              value: "T(java.lang.System).currentTimeMillis() % 10"
            - name: SPRING_CLOUD_STREAM_BINDINGS_BACKPRESSUREOUTPUT_PRODUCER_PARTITIONCOUNT  # this  to your application know about number of partitions
              value: "10"
            - name: SPRING_CLOUD_STREAM_KAFKA_BINDER_BROKERS # this could be avoided as same is anyway present in producer config
              value: "kafka-service:9092"
            - name: SPRING_CLOUD_STREAM_KAFKA_BINDER_AUTOCREATETOPICS
              value: "false"
            - name: SPRING_CLOUD_STREAM_KAFKA_BINDER_REQUIREDACKS
              value: "1"
            - name: SPRING_CLOUD_STREAM_KAFKA_BINDER_CONFIGURATION_MAX_POLL_RECORDS
              value: "500"
            - name: SPRING_CLOUD_STREAM_KAFKA_BINDER_CONFIGURATION_ENABLE_AUTO_COMMIT
              value: "false"
            - name: LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_CLOUD_STREAM
              value: "DEBUG"
---
apiVersion: v1
kind: Service
metadata:
  name: producer-service
spec:
  selector:
    app: producer
  ports:
    - protocol: TCP
      port: 80
      targetPort: 9991
  type: ClusterIP
